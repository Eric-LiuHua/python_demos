#指定编码为udf-8
#!/usr/bin/env python3
# -*- coding: utf-8 -*-


##
#第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；
#第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。



print("数据类型和变量")
print("1.i ai \" lynn !")

print(r"1.i ai  /'''"," lynn \ttt  "," r 在冒号之前，可以提示内部不转义 。 r 如果是单引号作为最外的，那内部就不能用单引号了。多个可以抵消。单个有异常 ")

print(''' 2.三个冒号 
是多行的输出 ''')



print("3.not and or 可以用于 布尔的运算。但是不能直接 not true 。not 后面是计算布尔 ")
print((not 1==1))


print("4.空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。")


print("5.python 有个特殊的 ，函数域和分支域 都是靠缩紧来区分的。还有变量声明的前面不能有空格，或者是函数域的开头同一位置。")
a ="变量声明"
if a.__len__()<0:
    print(a)
else:
    print("6.false 分支的计算结束，以：冒号为结束。")



print("7。在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量， ")

a=12212
print("把a的值改为数字。",a)

print("""8.Python解释器干了两件事情：
在内存中创建了一个'dsfljsldkfj'的字符串；
在内存中创建了一个名为a的变量，并把它指向'dsfljsldkfj'。
""")

b=a
a="dsfljsldkfj"

print("""
b=a
a="dsfljsldkfj"
b={},a={}""".format(b,a))



print("9.常量：python 中通常常量都是全部大写变量表示，不能改变"
      "但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。")
PI=3.1415926
PI=11
print(PI)


print("10.python 有两种除法，/ 这种是浮点除法。不管分子分母是整数还是浮点，结果都是浮点的。// 是地板除。取整的")

print("11/3 =",(11/3))
print("8/4=",(8/4))
print("可以看得出取整不是四舍五入而是直接切到小数点之后的数据,11//3=",(11//3))

print("求余：10%3=",(10%3))

print("""小结

Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些数据对象的，对变量赋值就是把数据和变量给关联起来。

对变量赋值x = y是把变量x指向真正的对象，该对象是变量y所指向的。随后对变量y的赋值不影响变量x的指向。

注意：Python的整数没有大小限制，而某些语言的整数根据其存储长度是有大小限制的，例如Java对32位整数的范围限制在-2147483648-2147483647。

Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大）。

""")